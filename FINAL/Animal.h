#pragma once
#include <iostream>
#include <string>
#include <windows.h>
#pragma comment(lib, "winmm.lib")
using namespace std;
enum Type { none, amphibians, aquatic, terrestrial, birds };
class Animal
{
protected:
	string name;
	Type type;
	float weight;
	float speed;
	string habitat;
	string species;
public:
	Animal():name("none"), type(none),weight(0),speed(0),habitat("nowhere"), species("none"){}
	Animal(string n, Type t, float w, float s, string h, string sp) :name(n), type(none), weight(w), speed(s), habitat(h), species(sp) {}
public:
	virtual void show()=0;
	virtual void sound()=0;
};
class Lion : public Animal
{
public:
	Lion(string n, Type t, float w, float s, string h, string sp) : Animal(n, t, w, s, h, sp) {}
	void show() override;
	void sound() override;
};
class Monkey: public Animal
{
public:
	Monkey(string n, Type t, float w, float s, string h, string sp) : Animal(n, t, w, s, h, sp) {}
	void show() override
	{
		cout << R"(                     .                                                          
  . . .  . . .    . .. . . .. .   .. . .  . . .  . . .  . . .  . . .  . . .  . .
  . . .  . . .    . .. . . .. .   .. .&,..( . .  . . .    . .  . . .  .   .  . .
  . . .  . . .    . .. . . ../%(&.,,./,. ......, /#. .  . . .  . . .  . . .  . .
  .   .  . . .    .  . %#,,,,,,,*,,,,,,.#,,,.......... #  .    . . .  .   .  . .
  . . .  . . .    . ..&**,,,/#**,,,,,,,,,(,*.,/,..#......,% .  . . .  . . .  . .
  . . .  . . .    . ,****#(*(**/***,#,,*,,,,,,,*,,,...%.....&  . . (  . . .  . .
                  ( *////*//(//////***(***,,,,,,,,,. .....,%%##,,,,,.../        
 . . .          #/ **///(////*(#.(/**%%%%#*&.    . (((%#(%/#%,,&****.....#      
 . . .  . . .  . .**#((/#,.......,.,.*% ........     .@(/((#%(**........... . . 
 . . . #.*,***,, &###(*........*.................#&  . %//%(#*,%&,........./. . 
 . . (,,*#,#,,,,%&(*#*...  .............................%/###%****,........(. . 
 . ./,,.%,,,*..#(###(....................... .%**&....../(#(#(**..,,......# . . 
 . .,.,,**...(,,,,&#.*......,&%%.............%/#/,.... #.(/#%%&,/.,,.....(  . . 
     .*, *...(...*(#/#%...*,%##(%/,...##.,..... ......... (*#.,*......./ .      
  . %%@.,.#.,.....#/#%. ..,........** ..............,,..... %*% ...*/ . . .  . .
        /..........%#,,............................(.... ../(*..          .     
  . . .  . ./# ,&,#@##,.......(................  ........*. */ . . .  . . .  . .
  . . .  . . .    .%(%(,,............ #.................,.(#.  . . .  .   .  . .
  . . .  . . .    . ..#%%*........................... %*. . .  . . .  . . .  . .
  .   .  . . .    . .. . . &#%,,( ......*.....,.###*,.    **, (. . .  .   .  . .
                            *((#(((#(#####(#((##(/** ,/((#((((*((               
 . . .  . . .  . . .  . . ,,*/(((((/,,*,....(((**,,,,&(# . .  (#(*. .. . .  . . 
 . . .  . . .    . .  .(#.,,,**((,,,*,,,,,,,,./(./....*. . . ..(((. .. . .  . . 
 . . .         . . . # ...,,,,,(*,,,,,**,,,,,,, #/.....( # . .///   .. . .  .   
 . . .  . . .  . . .  ., ,,,*(/(,,,,,,,,,,,,,,,,/(//..,*%. ,((##* . .. . .  . . 
 . . .    . .  . . .  .# ,,,*/( /,,*,,,,,,,,,,.#//(/(/((&((*##.   . .. . .  . . 
 . . .  . . .  . . . %#(.****/**.,,,,,,,,,,....(//*/*//(*(#. ..   . .. . .  . . 
 . . .    .      . .  .*%///////%....,........%//((/.////((.  #   ( .. .      . 
  . . .  . . &  %%%%..&#%%((////(((/,,....,*,%#%(/*%,&,*#(..,,,,,%,*  . . .  . .
  . . .  . . .%,,*..., &&*%#(#.#,%(%#/#,,***#(,,,,,,,,,,.,..,,,,,.#,/,.   .  . .
  . . .  . . ,,........,&,......../,%%#&##%.,,,,,,,,,,,*,,,,,,,,,**,,&. . .  . .
             .&...,,..,%..(.../... ...(    %,,%.,,#,,/*,,%*,.,                  
  . . .  . . .#,/*.&.**#..%.../.....** .  . . .# #%,,(,,,/. .  . . .  . . .  . .
  . . .  . .      . .. . . .. . . .. . .  . . .  . . .    . .  . . .  .   .  . .
  . . .  . . .    . .. . . .. . . .. . .  . . .  . . .  . . .  . . .  . .    . .\n)";
	}
	void sound() override
	{
		PlaySound(TEXT("mixkit-monkey-excited-screech-105.wav"), NULL, SND_FILENAME | SND_SYNC);
	}
};
